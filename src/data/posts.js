export const posts = [
    {
        id: 0,
        title: "Un'introduzione a Vite",
        excerpt: "Vite è uno strumento di creazione JavaScript che semplifica il modo in cui creiamo e sviluppiamo applicazioni Web front-end. Fondamentalmente fa due cose..",
        content: [
            { type: "paragraph", text: "Vite è uno strumento di creazione JavaScript che semplifica il modo in cui creiamo e sviluppiamo applicazioni Web front-end. Fondamentalmente fa due cose:" },
            { type: "list", items: ["Serve il tuo codice localmente durante lo sviluppo.", "Raggruppa il tuo JavaScript, CSS e altre risorse insieme per la produzione."] },
            { type: "image", src: "https://i.imgur.com/YOOCALL.png" },
            { type: "paragraph", text: "Ci sono molti altri strumenti là fuori che fanno la stessa cosa. Ad esempio, abbiamo WebPack, ma cosa rende Vite diverso?" },
            { type: "paragraph", text: "Well Vite è stato creato da Evan Yu che ha anche creato Vue.js come un modo sia per semplificare che per accelerare il processo di creazione." },
            { type: "paragraph", text: "Non molto tempo fa gli sviluppatori web non avevano un modo nativo per combinare i file JavaScript in modo modulare, ciò ha portato a strumenti come WebPack e Rollup che concatenano più file insieme in un unico pacchetto per il browser." },
            { type: "paragraph", text: "Il problema è che questo processo diventa sempre più lento man mano che l'app aggiunge più codice e dipendenze." },
            { type: "paragraph", text: "Nel 2015 sono stati introdotti i moduli ECMAScript e nel 2020 disponeva di un ampio supporto per il browser che consentiva agli sviluppatori di importare ed esportare codice da diversi file nel browser. Vite sfrutta i moduli ES nativi nel browser per caricare il tuo codice istantaneamente, non importa quanto sia grande l'app, supporta anche la sostituzione del modulo caldo per un ciclo di feedback estremamente veloce durante lo sviluppo." },
            { type: "paragraph", text: "Quando si costruisce per la produzione, utilizza Rollup sotto il cofano in modo da non doversi preoccupare di configurare. È uno strumento supponente che fornisce convenzioni che funzionano immediatamente per la maggior parte degli sviluppatori." },
            { type: "paragraph", text: "Prima di iniziare con Vite, assicurati di avere quanto segue:" },
            { type: "list", items: ["Node.js versione 12.2.0+ installata sulla macchina. È possibile installare l'ultima versione di Node.js con How To Install Node.js.", "Yarn package manager versione 1.22.0+ installata sulla macchina e familiarità con i flussi di lavoro Yarn. Installare il filato con il passaggio 1 in Come installare e utilizzare il gestore dei pacchetti del filato per Node.js.", "Familiarità con HTML, CSS e JavaScript moderno. Aiuta anche a conoscere i moderni JS utilizzati in React.", "Una conoscenza fondamentale di React, che puoi imparare con la serie How To Code in React.", "Un telefono cellulare collegato alla stessa rete Wi-Fi del computer per visualizzare in anteprima la tua app da cellulare."] },
            { type: "subtitle", text: "Iniziare con Vite for React.J.S" },
            { type: "paragraph", text: "Per iniziare con Vite, eseguire: filato creare vite dalla riga di comando e poi seguire i prompt. Puoi scegliere un progetto iniziale con il tuo framework front-end preferito." },
            { type: "paragraph", text: "Per React.JS è possibile digitare yarn create vite your-app-name --template reagite e voi Vite genererete automaticamente il boilerplate React per il vostro progetto." },
            { type: "paragraph", text: "Noterai anche che il progetto viene fornito con a vite.config.ts file. Ha un ecosistema plug-in che può estenderlo con funzionalità aggiuntive e puoi anche ignorare manualmente le impostazioni predefinite di Rollup quando necessario." },
            { type: "paragraph", text: "Ci sono alcuni plugin interessanti là fuori come vite-ssr che può fare server-side rendering come Next.js." },
            { type: "image", src: "https://i.imgur.com/mjzR2rt.png" },
            { type: "paragraph", text: "Ora per servire l'applicazione eseguita localmente npm eseguire dev. Anche se installi un sacco di grandi dipendenze come lodash e moment, il tempo per eseguire il server dev non cambia. Se apri la scheda di rete negli strumenti di sviluppo del browser noterai che invece di importare un singolo file bundle JavaScript importa il nostro codice sorgente effettivo come un file.tsx grezzo. In questo caso, rende anche il dattiloscritto circa 20-30 volte più veloce perché salta il controllo del tipo e utilizza la build ES per far traspirare il tuo codice." },
            { type: "paragraph", text: "Ora, mentre stai sviluppando la tua app, potresti modificarne lo stato nell'interfaccia utente e poi renderti conto che parte del codice deve cambiare quando modifichi il codice sorgente, le modifiche verranno riflesse istantaneamente senza perdere lo stato dell'applicazione. Questo è ciò che chiamiamo sostituzione del modulo caldo." },
            { type: "paragraph", text: "Ora esegui npm build per creare l'app per la produzione. Questo genererà un bundle JavaScript con Rollup ed eseguirà una serie di ottimizzazioni automatiche come la suddivisione automatica del codice per qualsiasi importazione dinamica e CSS." },
            { type: "paragraph", text: "Abbiamo esaminato cos'è Vite, come funziona e alcune delle sue funzionalità. Abbiamo anche imparato come configurare le app Vite for React. Al fine di migliorare il flusso di lavoro di sviluppo ed essere più produttivi creando applicazioni più leggere e veloci è possibile saperne di più su Vite nei suoi documenti." },
        ],
        author: "MaDGiiRL",
        date: "19-08-2025",
        cover: "https://i.imgur.com/MNpk6a3.png"
    },
    {
        id: 1,
        title: "HTML contro JSX",
        excerpt: "Hypertext Markup Language (HTML) è il linguaggio standard per i documenti che determinano la struttura di una pagina web...",
        content: [
            { type: "paragraph", text: "Hypertext Markup Language (HTML) è il linguaggio standard per i documenti che determinano la struttura di una pagina web." },
            { type: "paragraph", text: "L'HTML è un linguaggio molto importante nello sviluppo web. Il tuo codice è originariamente in HTML o viene compilato in modo che i browser possano leggerlo." },
            { type: "paragraph", text: "JSX, d'altra parte, significa JavaScript Syntax Extension o JavaScript XML come ad alcuni piace dirlo." },
            { type: "paragraph", text: "È stato creato come zucchero sintattico per React.createElement(). È un'estensione di JavaScript che consente agli sviluppatori di scrivere HTML direttamente all'interno di JavaScript. Quindi, quando scrivi JSX, tecnicamente stai scrivendo JavaScript e HTML insieme." },
            { type: "paragraph", text: "Inoltre, ciò significa che le parole chiave riservate di JavaScript devono essere mantenute intatte. Ed è per questo che l'attributo “for” in HTML è “HTMLFor” in JSX, poiché 'for' è una delle parole chiave riservate JavaScript più comuni." },
            { type: "paragraph", text: "In termini di supporto da parte dei browser, l'HTML è supportato da tutti. JSX, d'altra parte, non è mai stato realmente concepito per esserlo, quindi hai bisogno di un compilatore come Babel o Webpack per traspilare JSX nel JavaScript che i browser comprendono." },
            { type: "subtitle", text: "Le principali differenze tra HTML e JSX" },
            { type: "paragraph", text: "È necessario restituire un singolo elemento padre in JSX. Una delle maggiori differenze tra HTML e JSX è che in JSX, devi restituire un singolo elemento padre, altrimenti non verrà compilato." },
            { type: "paragraph", text: "Un sacco di devs usano <div>...</div>, ma uno migliore che molte persone usano è “fragment”, <>...</> il che rende il codice più leggibile." },
            { type: "paragraph", text: "In HTML, sei libero di fare quello che vuoi poiché non devi restituire un singolo elemento genitore." },
            { type: "image", src: "https://i.imgur.com/fizPNP8.png" },
            { type: "paragraph", text: "Qui puoi vedere che JSX non sta compilando perché non c'è nessun elemento genitore." },
            { type: "image", src: "https://i.imgur.com/7wntQgz.png" },
            { type: "paragraph", text: "E qui JSX sta compilando perché c'è un elemento genitore (frammento)." },
            { type: "paragraph", text: "In JSX, è possibile scrivere direttamente JavaScript. Puoi farlo mettendo il JavaScript in parentesi graffe {...}. Mentre in HTML è necessario un tag script o un file JavaScript esterno per implementare JavaScript:" },
            { type: "image", src: "https://i.imgur.com/On0Fkfe.png" },
            { type: "subtitle", text: "Tutti i tag da autochiudere in JSX" },
            { type: "paragraph", text: "I tag possono chiudersi autonomamente in JSX. Cioè, è possibile avere <div></div> come <div /> e <span></span> come <span />. Non vuoi farlo, ma è possibile." },
            { type: "paragraph", text: "I tag a chiusura automatica in HTML possono chiudersi automaticamente senza la barra prima della parentesi angolare destra, ovvero <br/> potrebbe funzionare come <br>. Ma in JSX, è necessario includere la barra. Questo dovrebbe portare qualcosa alla mente – JSX si basa fortemente sulla sintassi HTML 4." },
            { type: "image", src: "https://i.imgur.com/mSEx0PR.png" },
            { type: "paragraph", text: "Qui puoi vedere che JSX non sta compilando perché non c'è alcuna barra prima della parentesi angolare destra del tag di interruzione di riga." },
            { type: "image", src: "https://i.imgur.com/VwAFz0Q.png" },
            { type: "paragraph", text: "E qui puoi vedere che JSX sta compilando perché c'è una barra nel tag di interruzione di riga." },
            { type: "paragraph", text: "ma#ClassName e HTMLFor, non class e for in JSX Per definire i nomi delle classi e per gli attributi in JSX, non lo fai come classe o per, poiché entrambe sono parole chiave riservate in JavaScript." },
            { type: "paragraph", text: "In realtà crei componenti di classe con il classe parola chiave. Quindi, per definire i nomi delle classi in JSX, lo fai come 'nomeclasse' e per gli attributi per le etichette scrivi 'HTMLFor';" },
            { type: "image", src: "https://i.imgur.com/xW6gpBr.png" },
            { type: "subtitle", text: "Scrivi tutti gli attributi HTML in camelCase in JSX" },
            { type: "paragraph", text: "Devi scrivere tutti gli attributi HTML e i riferimenti agli eventi in camelCase mentre scrivi JSX. Quindi, onclick diventa onClick, onmouseover diventa suMouseOvere così via:" },
            { type: "image", src: "https://i.imgur.com/YuYuWxN.png" },
            { type: "subtitle", text: "Scrivi stili in linea come oggetti in JSX" },
            { type: "paragraph", text: "E infine, per definire gli stili in linea per JSX, lo scrivi come un oggetto, con le proprietà in camelCase, i valori tra virgolette, e poi lo passi in linea al JSX." },
            { type: "paragraph", text: "Ciò significa che devi aprire un attributo di stile e utilizzare parentesi graffe invece di virgolette. Questo si oppone all'HTML in cui sei libero di definire milioni di stili proprio all'interno del tag di apertura senza scriverli come oggetti e metterli tra virgolette:" },
            { type: "image", src: "https://i.imgur.com/4KTMPml.png" },
            { type: "paragraph", text: "Puoi scegliere di scrivere l'oggetto direttamente nell'attributo style – cioè aprendo due parentesi graffe e mettendo all'interno proprietà e valori." },
            { type: "paragraph", text: "Ma un modo più pulito è definire l'oggetto al di fuori del JSX, e poi passarlo nel tag di apertura." },
            { type: "image", src: "https://i.imgur.com/cL3ANBk.png" },
            { type: "paragraph", text: "Tieni presente che non dovresti utilizzare lo stile in linea in HTML – semplice e non vuoi rovinare il SEO del tuo sito web." },
            // { type: "list", items: ["HTML è statico", "JSX è dinamico", "React usa JSX per i componenti"] }
        ],
        author: "MaDGiiRL",
        date: "19-08-2025",
        cover: "https://i.imgur.com/GlBS8Qm.png"
    }
];
